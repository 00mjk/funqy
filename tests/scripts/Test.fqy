data Bool = F | T

let (^) = sup
let (~) = phf

do import("examples/Misc")
do import("examples/Prop")
do import("examples/Random")
do import("examples/Fourier")
do import("examples/ESVI")
do import("examples/TangleTree")
do import("examples/ExpandRepeat")
do import("examples/Quaternion")

let f = if 0
	then extract {
		(F, T) => @[1/2] (T, F),
		(T, F) => @[-1/2] (F, T),
	}
	else extract {
		(F, T) => (~T, ~F),
		(T, F) => (~F, ~T),
	}

// import("examples/Concat")
