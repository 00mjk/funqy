data Bool = F | T
data Dir3 = X | Y | Z

let (abc, qwe) = ((F, T), T)

fn (@) = {
	F => F
	T => T
}

fn (!) = {
	F => T
	T => F
}

fn equal = {
	(F, F) | (T, T) => T
	_ => F
}

assert @T : equal(T, T)
assert @T : !equal(F, T)

equal(T, T)