let list = (6, 4, 1, 0, 1, 2, 3)


let filtered = list
    >> filter(extract {0 | 2 | 4 => F, _ => T} >. measure)
    >> map(\n -> (n, n))

assert filtered == ((6,6),(1,1),(1,1),(3,3))


let folded = fold((), list, \(xs, x) -> (x, ...xs, x))

// assert folded == (...list, ...list)
print folded